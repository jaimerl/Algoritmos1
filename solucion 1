#include <iostream>
#include <conio.h>
using namespace std;

void cargar(int vec[], int n){
	int i;
	for(i=0;i<n;i++){
		cout << "Introducir elmento vec["<< i << "] : ";
		cin >> vec[i];
	}
}
void mostrar(int vec[], int n){
	int i;
	cout << "\nEl vector es -->>> :\n";
	for(i=0;i<n;i++){
		cout <<endl << "Elmento vec["<< i << "] : " << vec[i];
	}
}
void copiarElemImpares(int vecA[], int nA,int vecB[], int &nB){
	int i;
	nB = 0;
	for(i=0;i<nA;i++){
		if(vecA[i]%2 != 0){
			vecB[nB] = vecA[i];
			nB++;
		}
	}
}

bool verifSiElemExist(int vec[], int n, int elem){
	int i;
	bool k = false;
	for(i=0;i<n;i++){
		if(vec[i] == elem){
			k = true;
			i = n;
		}
	}
	return(k);
}
int frecuenciaElem(int vec[], int n, int elem){
	int i,c  = 0;	
	for(i=0;i<n;i++){
		if(vec[i] == elem){
			c++;
		}
	}
	return(c);
}
void copiarElemRepetidos(int vecA[], int nA,int vecB[], int &nB){
	int i;
	nB = 0;
	for(i=0;i<nA;i++){
		if((frecuenciaElem(vecA,nA,vecA[i]) > 1) && (verifSiElemExist(vecB,nB,vecA[i]) == false)){
			vecB[nB] = vecA[i];
			nB++;
		}
	}
}

void copiarElemOrdenados(int vecA[], int nA,int vecB[], int &nB){
	int i, ref = vecA[0];
	nB = 0;
	for(i=0;i<nA;i++){
		if(vecA[i] >= ref){
			vecB[nB] = vecA[i];
			nB++;
			ref = vecA[i];
		}
	}
}

void main(){
	int vec[20], n,vB[20],nB;
	cout << "Cuantos elementos para el vector ? : ";
	cin >> n;
	cargar(vec,n);
	mostrar(vec,n);
	copiarElemOrdenados(vec,n,vB,nB);
	mostrar(vB,nB);
	getch();
}
